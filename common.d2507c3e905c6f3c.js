"use strict";(self.webpackChunkgame_management=self.webpackChunkgame_management||[]).push([[76],{3032:(E,p,i)=>{i.d(p,{B:()=>c});var a=i(4438),u=i(7907);let c=(()=>{class h{constructor(l){this.apiService=l,this.endpoint="/admin"}getPublicSettings(){return this.apiService.get(`${this.endpoint}/public-settings`)}getAdminSettings(){return this.apiService.get(`${this.endpoint}/settings`)}updateAdminSettings(l){return this.apiService.put(`${this.endpoint}/settings`,l)}getGameStats(){return this.apiService.get(`${this.endpoint}/stats`)}getTeamStats(){return this.apiService.get(`${this.endpoint}/team-stats`)}static{this.\u0275fac=function(s){return new(s||h)(a.KVO(u.G))}}static{this.\u0275prov=a.jDH({token:h,factory:h.\u0275fac,providedIn:"root"})}}return h})()},4981:(E,p,i)=>{i.d(p,{c:()=>u});var a=i(4438);let u=(()=>{class c{constructor(){}handleError(r){let l="An unexpected error occurred",s=500;r.error instanceof ErrorEvent?(l=r.error.message,s=0):(s=r.status,l=r.error&&"object"==typeof r.error&&r.error.message||this.getDefaultErrorMessage(s));const o={message:l,status:s,timestamp:(new Date).toISOString(),path:r.url||""};return this.logError(o),o}getDefaultErrorMessage(r){switch(r){case 400:return"Bad Request - Invalid data provided";case 401:return"Unauthorized - Please login again";case 403:return"Forbidden - Access denied";case 404:return"Not Found - Resource not available";case 409:return"Conflict - Resource already exists";case 422:return"Unprocessable Entity - Validation failed";case 500:return"Internal Server Error - Please try again later";case 502:return"Bad Gateway - Service temporarily unavailable";case 503:return"Service Unavailable - Please try again later";case 504:return"Gateway Timeout - Request timed out";default:return"An unexpected error occurred"}}logError(r){console.error("API Error:",{message:r.message,status:r.status,timestamp:r.timestamp,path:r.path})}isNetworkError(r){return 0===r.status||"Unknown Error"===r.statusText}isServerError(r){return r.status>=500}isClientError(r){return r.status>=400&&r.status<500}getErrorMessage(r){return this.handleError(r).message}static{this.\u0275fac=function(l){return new(l||c)}}static{this.\u0275prov=a.jDH({token:c,factory:c.\u0275fac,providedIn:"root"})}}return c})()},5036:(E,p,i)=>{i.d(p,{w:()=>v});var a=i(4438),u=i(2307),c=i(3032),h=i(8141),r=i(9437),l=i(7673),s=i(7396),o=i(2956);let v=(()=>{class t{constructor(){this.userApiService=(0,a.WQX)(s.l),this.weaponApiService=(0,a.WQX)(u.m),this.adminApiService=(0,a.WQX)(c.B),this.injector=(0,a.WQX)(a.zZn),this._players=(0,a.vPA)([]),this._weapons=(0,a.vPA)([]),this._adminSettings=(0,a.vPA)({start_date:new Date,max_participants:40}),this.players=this._players.asReadonly(),this.weapons=this._weapons.asReadonly(),this.adminSettings=this._adminSettings.asReadonly(),this.teamStats=(0,a.EWP)(()=>{const n=this._players(),g=this._adminSettings().max_participants/4,m=n.filter(_=>"A"===_.team).length,f=n.filter(_=>"B"===_.team).length,y=n.filter(_=>"C"===_.team).length,P=n.filter(_=>"D"===_.team).length;return[{teamId:"A",playerCount:m,maxPlayers:g,percentage:m/g*100},{teamId:"B",playerCount:f,maxPlayers:g,percentage:f/g*100},{teamId:"C",playerCount:y,maxPlayers:g,percentage:y/g*100},{teamId:"D",playerCount:P,maxPlayers:g,percentage:P/g*100}]}),this.totalPlayers=(0,a.EWP)(()=>this._players().length),this.checkAuthAndLoadData(),window.addEventListener("authStateChanged",n=>{n.detail.isAuthenticated?(console.log("Auth state changed - user logged in, loading data"),this.loadDataAfterLogin()):(console.log("Auth state changed - user logged out, clearing data"),this.clearData())})}checkAuthAndLoadData(){setTimeout(()=>{this.injector.get(o.u).isAuthenticated()?this.loadInitialData():console.log("User not authenticated, skipping API calls")},0)}loadInitialData(){this.loadPlayers(),this.loadWeapons(),this.loadAdminSettings()}loadPlayers(){this.injector.get(o.u).isAuthenticated()?this.userApiService.getUsers().pipe((0,h.M)(d=>{console.log("Loaded players from API:",d),this._players.set(d)}),(0,r.W)(d=>(console.error("Error loading players:",d),this._players.set([]),(0,l.of)([])))).subscribe():console.log("User not authenticated, skipping players API call")}loadWeapons(){this.injector.get(o.u).isAuthenticated()?this.weaponApiService.getWeapons().pipe((0,h.M)(d=>{console.log("Loaded weapons from API:",d),this._weapons.set(d)}),(0,r.W)(d=>(console.error("Error loading weapons:",d),this._weapons.set([]),(0,l.of)([])))).subscribe():console.log("User not authenticated, skipping weapons API call")}loadAdminSettings(){this.injector.get(o.u).isAuthenticated()?this.adminApiService.getPublicSettings().pipe((0,h.M)(d=>this._adminSettings.set(d.data)),(0,r.W)(d=>(console.error("Error loading admin settings:",d),(0,l.of)(this._adminSettings())))).subscribe():console.log("User not authenticated, skipping admin settings API call")}getPlayersByTeam(n){return this._players().filter(d=>d.team===n)}getWeaponByUID(n){return this._weapons().find(d=>d.uid===n)}isUIDExists(n){return this._players().some(d=>d.uid===n)}refreshData(){this.injector.get(o.u).isAuthenticated()?(this.loadPlayers(),this.loadWeapons(),this.loadAdminSettings()):console.log("User not authenticated, skipping refresh data")}loadDataAfterLogin(){console.log("Loading data after successful login"),this.loadInitialData()}clearData(){console.log("Clearing game data after logout"),this._players.set([]),this._weapons.set([]),this._adminSettings.set({start_date:new Date,max_participants:40})}static{this.\u0275fac=function(d){return new(d||t)}}static{this.\u0275prov=a.jDH({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})()},7396:(E,p,i)=>{i.d(p,{l:()=>s});var a=i(8810),u=i(6354),c=i(9437),h=i(4438),r=i(7907),l=i(4981);let s=(()=>{class o{constructor(t,e){this.apiService=t,this.errorHandler=e,this.endpoint="/users"}getUsers(){return this.apiService.get(this.endpoint).pipe((0,u.T)(t=>{if(t.success&&t.data&&t.data.users)return t.data.users;throw new Error("Invalid response format")}),(0,c.W)(t=>(this.errorHandler.handleError(t),(0,a.$)(()=>t))))}getRegistrationStatus(){return this.apiService.get(this.endpoint).pipe((0,u.T)(t=>{if(t.success&&t.data&&t.data.registration_status)return t.data.registration_status;throw new Error("Invalid response format")}),(0,c.W)(t=>(this.errorHandler.handleError(t),(0,a.$)(()=>t))))}getUserById(t){return this.apiService.get(`${this.endpoint}/${t}`).pipe((0,u.T)(e=>{if(e.success&&!Array.isArray(e.data))return e.data;throw new Error("Invalid response format")}),(0,c.W)(e=>(this.errorHandler.handleError(e),(0,a.$)(()=>e))))}createUser(t){return this.apiService.post(`${this.endpoint}/register`,t).pipe((0,u.T)(e=>{if(e.success&&!Array.isArray(e.data))return e.data;throw new Error("Invalid response format")}),(0,c.W)(e=>(this.errorHandler.handleError(e),(0,a.$)(()=>e))))}updateUser(t,e){return this.apiService.put(`${this.endpoint}/${t}`,e).pipe((0,u.T)(n=>{if(n.success&&!Array.isArray(n.data))return n.data;throw new Error("Invalid response format")}),(0,c.W)(n=>(this.errorHandler.handleError(n),(0,a.$)(()=>n))))}deleteUser(t){return this.apiService.delete(`${this.endpoint}/${t}`).pipe((0,u.T)(e=>e.success),(0,c.W)(e=>(this.errorHandler.handleError(e),(0,a.$)(()=>e))))}getUsersByTeam(t){return this.apiService.get(`${this.endpoint}/team/${t}`).pipe((0,u.T)(e=>{if(e.success&&e.data&&e.data.users)return e.data.users;throw new Error("Invalid response format")}),(0,c.W)(e=>(this.errorHandler.handleError(e),(0,a.$)(()=>e))))}getUsersByStatus(t){return this.apiService.get(`${this.endpoint}/status/${t}`).pipe((0,u.T)(e=>{if(e.success&&e.data&&e.data.users)return e.data.users;throw new Error("Invalid response format")}),(0,c.W)(e=>(this.errorHandler.handleError(e),(0,a.$)(()=>e))))}searchUsers(t){const e={};return t.query&&(e.query=t.query),t.team&&(e.team=t.team),t.status&&(e.status=t.status),t.role&&(e.role=t.role),void 0!==t.is_paying_player&&(e.is_paying_player=t.is_paying_player),t.rank_level&&(e.rank_level=t.rank_level),t.page&&(e.page=t.page),t.limit&&(e.limit=t.limit),this.apiService.get(`${this.endpoint}/search`,e).pipe((0,c.W)(n=>(this.errorHandler.handleError(n),(0,a.$)(()=>n))))}getUserStatistics(){return this.apiService.get(`${this.endpoint}/statistics`).pipe((0,c.W)(t=>(this.errorHandler.handleError(t),(0,a.$)(()=>t))))}static{this.\u0275fac=function(e){return new(e||o)(h.KVO(r.G),h.KVO(l.c))}}static{this.\u0275prov=h.jDH({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})()},2307:(E,p,i)=>{i.d(p,{m:()=>h});var a=i(6354),u=i(4438),c=i(7907);let h=(()=>{class r{constructor(s){this.apiService=s,this.endpoint="/weapons"}getWeapons(){return this.apiService.get(this.endpoint).pipe((0,a.T)(s=>s.data))}getWeaponByUid(s){return this.apiService.get(`${this.endpoint}/${s}`).pipe((0,a.T)(o=>o.data[0]))}createWeapon(s){return this.apiService.post(this.endpoint,s).pipe((0,a.T)(o=>o.data))}updateWeapon(s,o){return this.apiService.put(`${this.endpoint}/${s}`,o).pipe((0,a.T)(v=>v.data[0]))}deleteWeapon(s){return this.apiService.delete(`${this.endpoint}/${s}`)}getWeaponsByTeam(s){return this.apiService.get(`${this.endpoint}/team/${s}`).pipe((0,a.T)(o=>o.data))}getWeaponsByType(s){return this.apiService.get(`${this.endpoint}/type/${s}`).pipe((0,a.T)(o=>o.data))}static{this.\u0275fac=function(o){return new(o||r)(u.KVO(c.G))}}static{this.\u0275prov=u.jDH({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})()}}]);